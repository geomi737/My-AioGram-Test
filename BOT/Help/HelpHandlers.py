import asyncio

from aiogram.types import Message,CallbackQuery
from aiogram import Router,F,html
from aiogram.filters import CommandStart,Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State,StatesGroup
from aiogram.types import ReplyKeyboardRemove

from Database.Requests import initialize_user,profile_info

from Help.HelpKeyboard import hp_kbR,hp_kbI

from datetime import datetime

#hh_rt - help_handlers router
hh_rt = Router()

@hh_rt.message(CommandStart())
async def start_command(message: Message):
    try:
        await initialize_user(message.from_user.id,message.from_user.username)
        await message.answer_photo('https://m.media-amazon.com/images/I/71m9fX5HlkL._UF1000,1000_QL80_.jpg',f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π,{message.from_user.username},"+
                         "—è –±–æ—Ç.–ù–æ —è –Ω–µ –ø—Ä–æ—Å—Ç–æ –±–æ—Ç,—è –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω—ã–π –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.",reply_markup=hp_kbR)
    except AttributeError:
        await initialize_user(message.from_user.id,"NonameHASH128125125152612")
        await message.answer(f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π,—è –Ω–µ —Å–º–æ–≥ –ø–æ–ª—É—á–∏—Ç—å —Ç–≤–æ—ë –∏–º—è,–Ω–æ –Ω–µ–≤–∞–∂–Ω–æ."+
                         "—è –±–æ—Ç.–ù–æ —è –Ω–µ –ø—Ä–æ—Å—Ç–æ –±–æ—Ç,—è –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω—ã–π –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.",reply_markup=hp_kbR)

@hh_rt.message(F.text == "–ü–æ–º–æ—â—åü§ñ")
@hh_rt.message(Command("help"))
async def help_command(message: Message):
    #–Ω—É–∂–Ω–æ –ø—Ä–∏–≤—è–∑–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∫–æ –≤—Å–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º
    await message.answer("/change - –ö—É—Ä—Å –≤–∞–ª—é—Ç –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –¥–æ–ª–ª–∞—Ä–∞\n/joke - –°–ª—É—á–∞–π–Ω–∞—è —à—É—Ç–∫–∞ (–æ–±—ã—á–Ω–æ –ö–†–ê–ô–ù–ï —Ç—É–ø–æ—Ä—ã–ª–∞—è).\n"
                         + "/start - –≤—ã–≤–æ–¥–∏—Ç –∫–Ω–æ–ø–æ—á–∫–∏ :0")


@hh_rt.message(F.text == "–û–± –∞–≤—Ç–æ—Ä–µüë•")
@hh_rt.message(Command("about"))
async def about_author(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç.–Ø —Ä–∞–±–æ—Ç–∞—é –Ω–∞–¥ —ç—Ç–∏–º –±–æ—Ç–æ–º –¥–ª—è –≥–∏—Ç—Ö–∞–±,—Ç–∞–∫ —á—Ç–æ –ø—Ä–æ —Å–µ–±—è –Ω–∏—á–µ–≥–æ –≥–æ–≤–æ—Ä–∏—Ç—å –Ω–µ —Ö–æ—á—É."+
                    "\n–ù–æ —Ç–æ—Ç –∫–æ–º—É —è –¥–∞–º —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å,—É–∂–µ –æ–±–æ –≤—Å—ë–º –≤–∫—É—Ä—Å–µ", reply_markup=hp_kbI)
    
@hh_rt.message(F.text == "–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å‚öôÔ∏è")
@hh_rt.message(Command("profile"))
async def message_cSayer(message: Message):
    UserInfo = await profile_info(message.from_user.id, "User Info")
    SubInfo = await profile_info(message.from_user.id, "Sub Info")
    
    # –ë–∞–∑–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å –±–µ–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–ø–∏—Å–∫–µ
    base_profile = (
        f"–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n"
        f"ID:{UserInfo.id}\n"
        f"Username:{UserInfo.username}\n"
        f"TelegramID:{UserInfo.tg_id}\n"
        f"–ù–∞–ø–∏—Å–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π:{UserInfo.message_counter}"
    )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–ø–∏—Å–∫–µ
    if SubInfo != None and SubInfo != "–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –¥–∞–Ω–Ω—ã—Ö!":
        try:
            SubInfo_Date_ForUser = SubInfo.subscription_date.strftime("%d.%m.%Y") if SubInfo.subscription_date else "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
            SubInfo_forUser = "–ê–∫—Ç–∏–≤–Ω–∞" if SubInfo.subscription_activity else "–ù–µ–∞–∫—Ç–∏–≤–Ω–∞"
            
            full_profile = (
                f"{base_profile}\n\n"
                f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–ø–∏—Å–∫–µ:\n"
                f"–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {SubInfo_forUser}\n"
                f"–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: {SubInfo_Date_ForUser}"
            )
            await message.reply(full_profile)
        except AttributeError:
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Å –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏ –≤—ã–≤–æ–¥–∏–º –±–∞–∑–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å
            await message.reply(base_profile)
    else:
        # –ï—Å–ª–∏ –Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–ø–∏—Å–∫–µ, –≤—ã–≤–æ–¥–∏–º –±–∞–∑–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å
        await message.reply(base_profile)
        
@hh_rt.message(F.text == "–û–±–Ω–æ–≤–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É‚å®Ô∏è")
@hh_rt.message(Command("reboot_keyboard"))
async def reload_keyboard(message: Message):
    await message.answer("–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!",reply_markup=hp_kbR)